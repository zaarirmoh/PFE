# version: '3.8'

# services:
#   backend:
#     image: "zaarirmoh/pfe:test"
#     container_name: pfe_backend
#     depends_on:
#       - redis
#     environment:
#       - DEBUG=True
#     ports:
#       - "8000:8000"
#     command: >
#       sh -c "python manage.py makemigrations &&
#              python manage.py migrate &&
#              python manage.py create_fake_users &&
#              python manage.py create_timelines &&
#              python manage.py create_team_settings &&
#              python manage.py runserver 0.0.0.0:8000"

#   redis:
#     image: "redis:7-alpine"
#     container_name: pfe_redis
#     restart: always
#     ports:
#       - "6379:6379"


version: "3.9"

services:
  backend:
    image: "zaarirmoh/pfe:corrected"
    container_name: pfe_backend
    depends_on:
      - redis
    ports:
      - "8000:8000"
    volumes:
      - sqlite_data:/app
    environment:
      - DEBUG=True
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py migrate django_celery_beat &&
        python manage.py create_fake_users &&
        python manage.py create_timelines &&
        python manage.py create_team_settings &&
        python manage.py runserver 0.0.0.0:8000
      "

  redis:
    image: redis:7-alpine
    container_name: pfe_redis
    restart: always
    ports:
      - "6379:6379"

  celery:
    image: "zaarirmoh/pfe:corrected"
    container_name: pfe_celery
    restart: always
    depends_on:
      - redis
      - backend
    volumes:
      - sqlite_data:/app
    command: >
      sh -c "
        sleep 10 &&
        celery -A pfebackend worker --loglevel=info
      "

  celery-beat:
    image: "zaarirmoh/pfe:corrected"
    container_name: pfe_celery_beat
    restart: always
    depends_on:
      - redis
      - backend
    volumes:
      - sqlite_data:/app
    command: >
      sh -c "
        sleep 15 &&
        celery -A pfebackend beat --loglevel=info
      "

volumes:
  sqlite_data:
