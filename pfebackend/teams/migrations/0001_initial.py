# Generated by Django 5.1.6 on 2025-04-14 19:03

import django.core.validators
import django.db.models.deletion
import teams.mixins
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('academic_year', models.CharField(choices=[('2', '2nd Year'), ('3', '3rd Year'), ('4siw', '4th Year SIW'), ('4isi', '4th Year ISI'), ('4iasd', '4th Year IASD'), ('5siw', '5th Year SIW'), ('5isi', '5th Year ISI'), ('5iasd', '5th Year IASD')], help_text='Academic year requirement for team members', max_length=5)),
                ('is_verified', models.BooleanField(default=False)),
                ('maximum_members', models.PositiveSmallIntegerField(help_text='Maximum number of members allowed in this team')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('member', 'Member')], default='member', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'team')},
            },
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(related_name='teams', through='teams.TeamMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='TeamInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('message', models.TextField(blank=True, help_text='Optional message from the inviter')),
                ('invitee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_invitations', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='teams.team')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('status__in', ['PENDING', 'ACCEPTED'])), fields=('team', 'invitee'), name='unique_active_invitation')],
            },
            bases=(teams.mixins.TeamRequestStatusMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TeamJoinRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('message', models.TextField(blank=True, help_text='Optional message from the requester')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_join_requests', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='teams.team')),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('status__in', ['PENDING', 'ACCEPTED'])), fields=('team', 'requester'), name='unique_active_join_request')],
            },
            bases=(teams.mixins.TeamRequestStatusMixin, models.Model),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('academic_year', 'name')},
        ),
        migrations.CreateModel(
            name='TeamSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Update Date')),
                ('academic_year', models.CharField(choices=[('2', '2nd Year'), ('3', '3rd Year'), ('4siw', '4th Year SIW'), ('4isi', '4th Year ISI'), ('4iasd', '4th Year IASD'), ('5siw', '5th Year SIW'), ('5isi', '5th Year ISI'), ('5iasd', '5th Year IASD')], help_text='Academic year these settings apply to', max_length=5)),
                ('maximum_members', models.PositiveSmallIntegerField(default=6, help_text='Maximum number of students allowed in a single team', validators=[django.core.validators.MinValueValidator(1, message='Teams must allow at least 1 members'), django.core.validators.MaxValueValidator(20, message='Teams cannot exceed 20 members')])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Team Settings',
                'verbose_name_plural': 'Team Settings',
                'unique_together': {('academic_year',)},
            },
        ),
    ]
